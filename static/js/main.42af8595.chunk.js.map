{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuidv4","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","console","log","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42af8595.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuidv4() }]);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n\r\n    setEditItem(item);\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findItem } = useContext(TaskListContext);\r\n\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title}</span>\r\n      <div>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"btn-delete task-btn\"\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n        </button>\r\n        <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n          <i className=\"fas fa-pen\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">Nothing to do...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editItem, editTask } =\r\n    useContext(TaskListContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editItem) {\r\n      addTask(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTask(title, editItem.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n      console.log(editItem);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        value={title}\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n        placeholder=\"To-do...\"\r\n        required\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? \"Modify Task\" : \"Add to list\"}\r\n        </button>\r\n        <button onClick={clearList} className=\"btn clear-btn\">\r\n          Delete All\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Tasks to do</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskListContextProvider from \"../context/TaskListContext\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport Header from \"./Header\";\r\nimport \"../App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <div className=\"main\">\r\n            <TaskForm />\r\n            <TaskList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}